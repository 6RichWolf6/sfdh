---
kind: pipeline
name: amd64

platform:
  os: linux
  arch: amd64

steps:

  # use minimum supported rust version for most steps
  - name: prepare repo
    image: alpine:3
    commands:
      - apk add git
      - git fetch --tags
      - git submodule init
      - git submodule update --recursive --remote

#comment  - name: cargo fmt
#comment    image: clux/muslrust:1.67.0
#comment    environment:
#comment      # store cargo data in repo folder so that it gets cached between steps
#comment      CARGO_HOME: .cargo
#comment    commands:
#comment      # need make existing toolchain available
#comment      - cp ~/.cargo . -r
#comment      - rustup toolchain install nightly
#comment      - rustup component add rustfmt --toolchain nightly
#comment      - cargo +nightly fmt -- --check
#comment
#comment  # check each package to make sure they compile with default features.
#comment  # this is required for crates.io
#comment  - name: cargo check
#comment    image: clux/muslrust:1.67.0
#comment    environment:
#comment      CARGO_HOME: .cargo
#comment    commands:
#comment      - cargo check --package lemmy_utils
#comment      - cargo check --package lemmy_db_schema
#comment      - cargo check --package lemmy_db_views
#comment      - cargo check --package lemmy_db_views_actor
#comment      - cargo check --package lemmy_db_views_moderator
#comment      - cargo check --package lemmy_api_common
#comment      - cargo check --package lemmy_api
#comment      - cargo check --package lemmy_api_crud
#comment      - cargo check --package lemmy_apub
#comment      - cargo check --package lemmy_routes
#comment      - cargo check --workspace
#comment      - cargo check --workspace --features console
#comment      # disabled because it takes too long with pict-rs
#comment      #- cargo check --workspace --all-features
#comment
#comment  - name: cargo clippy
#comment    image: clux/muslrust:1.67.0
#comment    environment:
#comment      CARGO_HOME: .cargo
#comment    commands:
#comment        # latest rust for clippy to get extra checks
#comment        # when adding new clippy lints, make sure to also add them in scripts/fix-clippy.sh
#comment      - rustup component add clippy
#comment      - cargo clippy --workspace --tests --all-targets --features console --
#comment          -D warnings -D deprecated -D clippy::perf -D clippy::complexity
#comment          -D clippy::style -D clippy::correctness -D clippy::suspicious
#comment          -D clippy::dbg_macro -D clippy::inefficient_to_string
#comment          -D clippy::items-after-statements -D clippy::implicit_clone
#comment          -D clippy::wildcard_imports -D clippy::cast_lossless
#comment          -D clippy::manual_string_new -D clippy::redundant_closure_for_method_calls
#comment          -D clippy::unused_self
#comment          -A clippy::uninlined_format_args
#comment          -D clippy::get_first
#comment      - cargo clippy --workspace --features console --
#comment        -D clippy::unwrap_used
#comment        -D clippy::indexing_slicing
#comment
#comment  - name: lemmy_api_common doesnt depend on diesel
#comment    image: clux/muslrust:1.67.0
#comment    environment:
#comment      CARGO_HOME: .cargo
#comment    commands:
#comment      - "! cargo tree -p lemmy_api_common --no-default-features -i diesel"
#comment
#comment  - name: check defaults.hjson updated
#comment    image: clux/muslrust:1.67.0
#comment    environment:
#comment      CARGO_HOME: .cargo
#comment    commands:
#comment      - export LEMMY_CONFIG_LOCATION=./config/config.hjson
#comment      - ./scripts/update_config_defaults.sh config/defaults_current.hjson
#comment      - diff config/defaults.hjson config/defaults_current.hjson
#comment
#comment  - name: cargo test
#comment    image: clux/muslrust:1.67.0
#comment    environment:
#comment      LEMMY_DATABASE_URL: postgres://lemmy:password@database:5432/lemmy
#comment      RUST_BACKTRACE: 1
#comment      RUST_TEST_THREADS: 1
#comment      CARGO_HOME: .cargo
#comment    commands:
#comment      - export LEMMY_CONFIG_LOCATION=../../config/config.hjson
#comment      - cargo test --workspace --no-fail-fast
#comment
#comment  - name: cargo build
#comment    image: clux/muslrust:1.67.0
#comment    environment:
#comment      CARGO_HOME: .cargo
#comment    commands:
#comment      - cargo build
#comment      - mv target/x86_64-unknown-linux-musl/debug/lemmy_server target/lemmy_server
#comment
#comment  - name: run federation tests
#comment    image: node:alpine
#comment    environment:
#comment      LEMMY_DATABASE_URL: postgres://lemmy:password@database:5432
#comment      DO_WRITE_HOSTS_FILE: 1
#comment    commands:
#comment      - apk add bash curl postgresql-client
#comment      - bash api_tests/prepare-drone-federation-test.sh
#comment      - cd api_tests/
#comment      - yarn
#comment      - yarn api-test
#comment
  - name: nightly build
    image: plugins/docker
    settings:
      dockerfile: docker/Dockerfile
      build_args: RUST_RELEASE_MODE=release
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: dessalines/lemmy
      tags:
        - dev
    #when:
    #  event:
    #    - cron

  - name: publish release docker image
    image: plugins/docker
    settings:
      dockerfile: docker/Dockerfile
      build_args: RUST_RELEASE_MODE=release
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: dessalines/lemmy
      add_host: github.com:140.82.112.3,static.crates.io:18.154.227.73,crates.io:108.138.64.68,dl-cdn.alpinelinux.org:146.75.30.133
      auto_tag: true
      auto_tag_suffix: linux-amd64
    when:
      ref:
        - refs/tags/*

  - name: publish release docker manifest
    image: plugins/manifest
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      target: "dessalines/lemmy:${DRONE_TAG}"
      template: "dessalines/lemmy:${DRONE_TAG}-OS-ARCH"
      platforms:
        - linux/amd64
        - linux/arm64
      ignore_missing: true
    when:
      ref:
        - refs/tags/*

  - name: publish latest release docker manifest
    image: plugins/manifest
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      target: "dessalines/lemmy:latest"
      template: "dessalines/lemmy:${DRONE_TAG}-OS-ARCH"
      platforms:
        - linux/amd64
        - linux/arm64
      ignore_missing: true
    when:
      ref:
        - refs/tags/*

  # using https://github.com/pksunkara/cargo-workspaces
  - name: publish to crates.io
    image: clux/muslrust:1.67.0
    environment:
      CARGO_TOKEN:
        from_secret: cargo_api_token
    commands:
      - cargo install cargo-workspaces
      - cp -r migrations crates/db_schema/
      - cargo login "$CARGO_TOKEN"
      - cargo workspaces publish --from-git --allow-dirty --no-verify --allow-branch "${DRONE_TAG}" --yes custom "${DRONE_TAG}"
    when:
      ref:
        - refs/tags/*

  - name: Notify on failure
    image: alpine:3
    commands: 
      - apk add curl
      - "curl -d'Drone build failed: ${DRONE_BUILD_LINK}' ntfy.sh/lemmy_drone_ci"
    when:
      status:
        - failure

  - name: Notify on tag deploy
    image: alpine:3
    commands: 
      - apk add curl
      - "curl -d'lemmy:${DRONE_TAG} deployed' ntfy.sh/lemmy_drone_ci"
    when:
      ref:
        - refs/tags/*

services:
  - name: database
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: lemmy
      POSTGRES_PASSWORD: password

---
kind: pipeline
name: arm64

platform:
  os: linux
  arch: arm64

steps:

  - name: prepare repo
    image: rust:1.57-slim
    user: root
    commands:
      - apt update
      - apt install --no-install-recommends --yes git
      - git fetch --tags
      - git submodule init
      - git submodule update --recursive --remote

  # TODO temporarily disable arm tests
  # - name: cargo test
  #   image: rust:1.57-slim
  #   environment:
  #     LEMMY_DATABASE_URL: postgres://lemmy:password@database:5432/lemmy
  #     LEMMY_CONFIG_LOCATION: ../../config/config.hjson
  #     RUST_BACKTRACE: 1
  #     RUST_TEST_THREADS: 1
  #   commands:
  #     - apt-get update
  #     - apt-get -y install --no-install-recommends postgresql-client libssl-dev pkg-config libpq-dev
  #     - cargo test --workspace --no-fail-fast
  #     - cargo build

  # TODO temporarily disable arm tests
  # Using Debian here because there seems to be no official Alpine-based Rust docker image for ARM.
  # - name: cargo build
  #   image: rust:1.57-slim
  #   commands:
  #     - apt-get update
  #     - apt-get -y install --no-install-recommends libssl-dev pkg-config libpq-dev
  #     - cargo build
  #     - mv target/debug/lemmy_server target/lemmy_server

  # TODO temporarily disable arm tests
  # - name: run federation tests
  #   image: node:16-slim
  #   environment:
  #     LEMMY_DATABASE_URL: postgres://lemmy:password@database:5432
  #     DO_WRITE_HOSTS_FILE: 1
  #   commands:
  #     - mkdir -p /usr/share/man/man1 /usr/share/man/man7
  #     - apt-get update
  #     - apt-get -y install --no-install-recommends bash curl libssl-dev pkg-config libpq-dev postgresql-client libc6-dev
  #     - bash api_tests/prepare-drone-federation-test.sh
  #     - cd api_tests/
  #     - yarn
  #     - yarn api-test

  - name: publish release docker image
    image: plugins/docker
    settings:
      dockerfile: docker/Dockerfile.arm
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo: dessalines/lemmy
      auto_tag: true
      auto_tag_suffix: linux-arm64
    when:
      ref:
        - refs/tags/*

  - name: publish release docker manifest
    image: plugins/manifest
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      target: "dessalines/lemmy:${DRONE_TAG}"
      template: "dessalines/lemmy:${DRONE_TAG}-OS-ARCH"
      platforms:
        - linux/amd64
        - linux/arm64
      ignore_missing: true
    when:
      ref:
        - refs/tags/*

  - name: publish latest release docker manifest
    image: plugins/manifest
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      target: "dessalines/lemmy:latest"
      template: "dessalines/lemmy:${DRONE_TAG}-OS-ARCH"
      platforms:
        - linux/amd64
        - linux/arm64
      ignore_missing: true
    when:
      ref:
        - refs/tags/*

# TODO temporarily disable arm tests
# services:
#   - name: database
#     image: postgres:12-alpine
#     environment:
#       POSTGRES_USER: lemmy
#       POSTGRES_PASSWORD: password
