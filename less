    Checking lemmy_db_schema v0.16.5 (/home/felix/workspace/lemmy/crates/db_schema)
    Checking lemmy_db_views v0.16.5 (/home/felix/workspace/lemmy/crates/db_views)
    Checking lemmy_db_views_actor v0.16.5 (/home/felix/workspace/lemmy/crates/db_views_actor)
error[E0277]: the trait bound `((Integer, Text, Text, Nullable<Text>, diesel::sql_types::Bool, Timestamp, Nullable<Timestamp>, diesel::sql_types::Bool, diesel::sql_types::Bool, Text, diesel::sql_types::Bool, Nullable<Text>, Nullable<Text>, diesel::sql_types::Bool, diesel::sql_types::Bool), (Integer, Integer, BigInt, BigInt, BigInt, Timestamp, BigInt, BigInt, BigInt, BigInt), Nullable<(Integer, Integer, Integer, Timestamp, Nullable<diesel::sql_types::Bool>)>, Nullable<(Integer, Integer, Integer, Timestamp)>): load_dsl::private::CompatibleType<(CommunitySafe, CommunityAggregates, std::option::Option<CommunityFollower>, std::option::Option<CommunityBlock>, Vec<Language>), _>` is not satisfied
    --> crates/db_views_actor/src/community_view.rs:61:10
     |
61   |         .first::<CommunityViewTuple>(conn)?;
     |          ^^^^^ the trait `load_dsl::private::CompatibleType<(CommunitySafe, CommunityAggregates, std::option::Option<CommunityFollower>, std::option::Option<CommunityBlock>, Vec<Language>), _>` is not implemented for `((Integer, Text, Text, Nullable<Text>, diesel::sql_types::Bool, Timestamp, Nullable<Timestamp>, diesel::sql_types::Bool, diesel::sql_types::Bool, Text, diesel::sql_types::Bool, Nullable<Text>, Nullable<Text>, diesel::sql_types::Bool, diesel::sql_types::Bool), (Integer, Integer, BigInt, BigInt, BigInt, Timestamp, BigInt, BigInt, BigInt, BigInt), Nullable<(Integer, Integer, Integer, Timestamp, Nullable<diesel::sql_types::Bool>)>, Nullable<(Integer, Integer, Integer, Timestamp)>)`
     |
     = help: the following other types implement trait `load_dsl::private::CompatibleType<U, DB>`:
               (ST0, ST1)
               (ST0, ST1, ST2)
               (ST0, ST1, ST2, ST3)
               (ST0, ST1, ST2, ST3, ST4)
               (ST0, ST1, ST2, ST3, ST4, ST5)
               (ST0, ST1, ST2, ST3, ST4, ST5, ST6)
               (ST0, ST1, ST2, ST3, ST4, ST5, ST6, ST7)
               (ST0, ST1, ST2, ST3, ST4, ST5, ST6, ST7, ST8)
             and 24 others
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, (CommunitySafe, CommunityAggregates, std::option::Option<CommunityFollower>, std::option::Option<CommunityBlock>, Vec<Language>)>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<JoinOn<diesel::internal::table_macro::Join<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_aggregates::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_aggregates::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>, lemmy_db_schema::schema::community_follower::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::And<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, lemmy_db_schema::schema::community_follower::community_id>>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community_follower::person_id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>>, lemmy_db_schema::schema::community_block::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::And<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, lemmy_db_schema::schema::community_block::community_id>>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community_block::person_id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>>>, query_builder::select_clause::SelectClause<((lemmy_db_schema::schema::community::id, lemmy_db_schema::schema::community::name, title, lemmy_db_schema::schema::community::description, lemmy_db_schema::schema::community::removed, lemmy_db_schema::schema::community::published, lemmy_db_schema::schema::community::updated, lemmy_db_schema::schema::community::deleted, lemmy_db_schema::schema::community::nsfw, lemmy_db_schema::schema::community::actor_id, lemmy_db_schema::schema::community::local, lemmy_db_schema::schema::community::icon, lemmy_db_schema::schema::community::banner, lemmy_db_schema::schema::community::hidden, posting_restricted_to_mods), (lemmy_db_schema::schema::community_aggregates::id, lemmy_db_schema::schema::community_aggregates::community_id, subscribers, lemmy_db_schema::schema::community_aggregates::posts, lemmy_db_schema::schema::community_aggregates::comments, lemmy_db_schema::schema::community_aggregates::published, lemmy_db_schema::schema::community_aggregates::users_active_day, lemmy_db_schema::schema::community_aggregates::users_active_week, lemmy_db_schema::schema::community_aggregates::users_active_month, lemmy_db_schema::schema::community_aggregates::users_active_half_year), NullableExpression<(lemmy_db_schema::schema::community_follower::id, lemmy_db_schema::schema::community_follower::community_id, lemmy_db_schema::schema::community_follower::person_id, lemmy_db_schema::schema::community_follower::published, pending)>, NullableExpression<(lemmy_db_schema::schema::community_block::id, lemmy_db_schema::schema::community_block::person_id, lemmy_db_schema::schema::community_block::community_id, lemmy_db_schema::schema::community_block::published)>)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>, query_builder::order_clause::NoOrderClause, query_builder::limit_offset_clause::LimitOffsetClause<query_builder::limit_clause::LimitClause<diesel::internal::derives::as_expression::Bound<BigInt, i64>>, query_builder::offset_clause::NoOffsetClause>>`
note: required by a bound in `first`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1736:22
     |
1736 |         Limit<Self>: LoadQuery<'query, Conn, U>,
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `first`

error[E0277]: the trait bound `(CommunitySafe, CommunityAggregates, std::option::Option<CommunityFollower>, std::option::Option<CommunityBlock>, Vec<Language>): FromSqlRow<_, _>` is not satisfied
    --> crates/db_views_actor/src/community_view.rs:61:10
     |
61   |         .first::<CommunityViewTuple>(conn)?;
     |          ^^^^^ the trait `FromSqlRow<_, _>` is not implemented for `(CommunitySafe, CommunityAggregates, std::option::Option<CommunityFollower>, std::option::Option<CommunityBlock>, Vec<Language>)`
     |
     = help: the following other types implement trait `FromSqlRow<ST, DB>`:
               <(T1, T0) as FromSqlRow<(ST1, Untyped), __DB>>
               <(T1, T2, T0) as FromSqlRow<(ST1, ST2, Untyped), __DB>>
               <(T1, T2, T3, T0) as FromSqlRow<(ST1, ST2, ST3, Untyped), __DB>>
               <(T1, T2, T3, T4, T0) as FromSqlRow<(ST1, ST2, ST3, ST4, Untyped), __DB>>
               <(T1, T2, T3, T4, T5, T0) as FromSqlRow<(ST1, ST2, ST3, ST4, ST5, Untyped), __DB>>
               <(T1, T2, T3, T4, T5, T6, T0) as FromSqlRow<(ST1, ST2, ST3, ST4, ST5, ST6, Untyped), __DB>>
               <(T1, T2, T3, T4, T5, T6, T7, T0) as FromSqlRow<(ST1, ST2, ST3, ST4, ST5, ST6, ST7, Untyped), __DB>>
               <(T1, T2, T3, T4, T5, T6, T7, T8, T0) as FromSqlRow<(ST1, ST2, ST3, ST4, ST5, ST6, ST7, ST8, Untyped), __DB>>
             and 23 others
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, (CommunitySafe, CommunityAggregates, std::option::Option<CommunityFollower>, std::option::Option<CommunityBlock>, Vec<Language>)>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<JoinOn<diesel::internal::table_macro::Join<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_aggregates::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_aggregates::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>, lemmy_db_schema::schema::community_follower::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::And<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, lemmy_db_schema::schema::community_follower::community_id>>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community_follower::person_id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>>, lemmy_db_schema::schema::community_block::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::And<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, lemmy_db_schema::schema::community_block::community_id>>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community_block::person_id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>>>, query_builder::select_clause::SelectClause<((lemmy_db_schema::schema::community::id, lemmy_db_schema::schema::community::name, title, lemmy_db_schema::schema::community::description, lemmy_db_schema::schema::community::removed, lemmy_db_schema::schema::community::published, lemmy_db_schema::schema::community::updated, lemmy_db_schema::schema::community::deleted, lemmy_db_schema::schema::community::nsfw, lemmy_db_schema::schema::community::actor_id, lemmy_db_schema::schema::community::local, lemmy_db_schema::schema::community::icon, lemmy_db_schema::schema::community::banner, lemmy_db_schema::schema::community::hidden, posting_restricted_to_mods), (lemmy_db_schema::schema::community_aggregates::id, lemmy_db_schema::schema::community_aggregates::community_id, subscribers, lemmy_db_schema::schema::community_aggregates::posts, lemmy_db_schema::schema::community_aggregates::comments, lemmy_db_schema::schema::community_aggregates::published, lemmy_db_schema::schema::community_aggregates::users_active_day, lemmy_db_schema::schema::community_aggregates::users_active_week, lemmy_db_schema::schema::community_aggregates::users_active_month, lemmy_db_schema::schema::community_aggregates::users_active_half_year), NullableExpression<(lemmy_db_schema::schema::community_follower::id, lemmy_db_schema::schema::community_follower::community_id, lemmy_db_schema::schema::community_follower::person_id, lemmy_db_schema::schema::community_follower::published, pending)>, NullableExpression<(lemmy_db_schema::schema::community_block::id, lemmy_db_schema::schema::community_block::person_id, lemmy_db_schema::schema::community_block::community_id, lemmy_db_schema::schema::community_block::published)>)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>, query_builder::order_clause::NoOrderClause, query_builder::limit_offset_clause::LimitOffsetClause<query_builder::limit_clause::LimitClause<diesel::internal::derives::as_expression::Bound<BigInt, i64>>, query_builder::offset_clause::NoOffsetClause>>`
note: required by a bound in `first`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1736:22
     |
1736 |         Limit<Self>: LoadQuery<'query, Conn, U>,
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `first`

error[E0308]: mismatched types
  --> crates/db_views_actor/src/community_view.rs:38:11
   |
38 |         let (community, counts, follower, blocked) = community::table
   |  ___________^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^___-
   | |           |
   | |           expected a tuple with 5 elements, found one with 4 elements
39 | |         .find(community_id)
40 | |         .inner_join(community_aggregates::table)
41 | |         .left_join(
...  |
60 | |         ))
61 | |         .first::<CommunityViewTuple>(conn)?;
   | |___________________________________________- this expression has type `(CommunitySafe, CommunityAggregates, std::option::Option<CommunityFollower>, std::option::Option<CommunityBlock>, Vec<Language>)`
   |
   = note: expected tuple `(CommunitySafe, CommunityAggregates, std::option::Option<CommunityFollower>, std::option::Option<CommunityBlock>, Vec<Language>)`
              found tuple `(_, _, _, _)`

error[E0277]: the trait bound `lemmy_db_schema::schema::language::id: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
  --> crates/db_views_actor/src/community_view.rs:66:10
   |
66 |         .select(language::all_columns)
   |          ^^^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `lemmy_db_schema::schema::language::id`
   |
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <lemmy_db_schema::schema::language::id as SelectableExpression<JoinOn<Join, On>>>
             <lemmy_db_schema::schema::language::id as SelectableExpression<Only<lemmy_db_schema::schema::language::table>>>
             <lemmy_db_schema::schema::language::id as SelectableExpression<SelectStatement<FromClause<From>>>>
             <lemmy_db_schema::schema::language::id as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
             <lemmy_db_schema::schema::language::id as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
             <lemmy_db_schema::schema::language::id as SelectableExpression<lemmy_db_schema::schema::language::table>>
   = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>>` for `lemmy_db_schema::schema::language::id`
   = note: 2 redundant requirements hidden
   = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>, query_builder::select_clause::DefaultSelectClause<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, _>>>>`

error[E0271]: type mismatch resolving `<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>> as AppearsInFromClause<lemmy_db_schema::schema::language::table>>::Count == diesel::query_source::Once`
  --> crates/db_views_actor/src/community_view.rs:66:10
   |
66 |         .select(language::all_columns)
   |          ^^^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
   |
   = note: required because of the requirements on the impl of `AppearsOnTable<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>` for `lemmy_db_schema::schema::language::id`
   = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>` for `lemmy_db_schema::schema::language::id`
   = note: 1 redundant requirement hidden
   = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>, query_builder::select_clause::DefaultSelectClause<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, _>>>>`

error[E0277]: the trait bound `code: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
  --> crates/db_views_actor/src/community_view.rs:66:10
   |
66 |         .select(language::all_columns)
   |          ^^^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `code`
   |
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <code as SelectableExpression<JoinOn<Join, On>>>
             <code as SelectableExpression<Only<lemmy_db_schema::schema::language::table>>>
             <code as SelectableExpression<SelectStatement<FromClause<From>>>>
             <code as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
             <code as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
             <code as SelectableExpression<lemmy_db_schema::schema::language::table>>
   = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>>` for `code`
   = note: 2 redundant requirements hidden
   = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>, query_builder::select_clause::DefaultSelectClause<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, _>>>>`

error[E0277]: the trait bound `lemmy_db_schema::schema::language::name: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
  --> crates/db_views_actor/src/community_view.rs:66:10
   |
66 |         .select(language::all_columns)
   |          ^^^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `lemmy_db_schema::schema::language::name`
   |
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <lemmy_db_schema::schema::language::name as SelectableExpression<JoinOn<Join, On>>>
             <lemmy_db_schema::schema::language::name as SelectableExpression<Only<lemmy_db_schema::schema::language::table>>>
             <lemmy_db_schema::schema::language::name as SelectableExpression<SelectStatement<FromClause<From>>>>
             <lemmy_db_schema::schema::language::name as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
             <lemmy_db_schema::schema::language::name as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
             <lemmy_db_schema::schema::language::name as SelectableExpression<lemmy_db_schema::schema::language::table>>
   = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>>` for `lemmy_db_schema::schema::language::name`
   = note: 2 redundant requirements hidden
   = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>, query_builder::select_clause::DefaultSelectClause<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, _>>>>`

error[E0271]: type mismatch resolving `<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner> as AppearsInFromClause<lemmy_db_schema::schema::language::table>>::Count == diesel::query_source::Once`
  --> crates/db_views_actor/src/community_view.rs:66:10
   |
66 |         .select(language::all_columns)
   |          ^^^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
   |
   = note: required because of the requirements on the impl of `AppearsOnTable<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>>` for `lemmy_db_schema::schema::language::id`
   = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>>` for `lemmy_db_schema::schema::language::id`
   = note: 2 redundant requirements hidden
   = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>, query_builder::select_clause::DefaultSelectClause<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, _>>>>`

error[E0277]: the trait bound `lemmy_db_schema::schema::language::id: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
    --> crates/db_views_actor/src/community_view.rs:67:10
     |
67   |         .load::<Language>(conn)?;
     |          ^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `lemmy_db_schema::schema::language::id`
     |
     = help: the following other types implement trait `SelectableExpression<QS>`:
               <lemmy_db_schema::schema::language::id as SelectableExpression<JoinOn<Join, On>>>
               <lemmy_db_schema::schema::language::id as SelectableExpression<Only<lemmy_db_schema::schema::language::table>>>
               <lemmy_db_schema::schema::language::id as SelectableExpression<SelectStatement<FromClause<From>>>>
               <lemmy_db_schema::schema::language::id as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
               <lemmy_db_schema::schema::language::id as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
               <lemmy_db_schema::schema::language::id as SelectableExpression<lemmy_db_schema::schema::language::table>>
     = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>>` for `lemmy_db_schema::schema::language::id`
     = note: 2 redundant requirements hidden
     = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
     = note: required because of the requirements on the impl of `query_builder::select_clause::SelectClauseExpression<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>>` for `query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, _>>>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, Language>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, _>>>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1499:15
     |
1499 |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

error[E0271]: type mismatch resolving `<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>> as AppearsInFromClause<lemmy_db_schema::schema::language::table>>::Count == diesel::query_source::Once`
    --> crates/db_views_actor/src/community_view.rs:67:10
     |
67   |         .load::<Language>(conn)?;
     |          ^^^^ expected struct `diesel::query_source::Once`, found struct `diesel::query_source::Never`
     |
     = note: required because of the requirements on the impl of `AppearsOnTable<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>` for `lemmy_db_schema::schema::language::id`
     = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>` for `lemmy_db_schema::schema::language::id`
     = note: 1 redundant requirement hidden
     = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
     = note: required because of the requirements on the impl of `query_builder::select_clause::SelectClauseExpression<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>>` for `query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, _>>>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, Language>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, _>>>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1499:15
     |
1499 |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

error[E0277]: the trait bound `code: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
    --> crates/db_views_actor/src/community_view.rs:67:10
     |
67   |         .load::<Language>(conn)?;
     |          ^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `code`
     |
     = help: the following other types implement trait `SelectableExpression<QS>`:
               <code as SelectableExpression<JoinOn<Join, On>>>
               <code as SelectableExpression<Only<lemmy_db_schema::schema::language::table>>>
               <code as SelectableExpression<SelectStatement<FromClause<From>>>>
               <code as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
               <code as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
               <code as SelectableExpression<lemmy_db_schema::schema::language::table>>
     = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>>` for `code`
     = note: 2 redundant requirements hidden
     = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
     = note: required because of the requirements on the impl of `query_builder::select_clause::SelectClauseExpression<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>>` for `query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, _>>>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, Language>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, _>>>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1499:15
     |
1499 |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

error[E0277]: the trait bound `lemmy_db_schema::schema::language::name: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
    --> crates/db_views_actor/src/community_view.rs:67:10
     |
67   |         .load::<Language>(conn)?;
     |          ^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `lemmy_db_schema::schema::language::name`
     |
     = help: the following other types implement trait `SelectableExpression<QS>`:
               <lemmy_db_schema::schema::language::name as SelectableExpression<JoinOn<Join, On>>>
               <lemmy_db_schema::schema::language::name as SelectableExpression<Only<lemmy_db_schema::schema::language::table>>>
               <lemmy_db_schema::schema::language::name as SelectableExpression<SelectStatement<FromClause<From>>>>
               <lemmy_db_schema::schema::language::name as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
               <lemmy_db_schema::schema::language::name as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
               <lemmy_db_schema::schema::language::name as SelectableExpression<lemmy_db_schema::schema::language::table>>
     = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>>` for `lemmy_db_schema::schema::language::name`
     = note: 2 redundant requirements hidden
     = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
     = note: required because of the requirements on the impl of `query_builder::select_clause::SelectClauseExpression<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>>` for `query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, _>>>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, Language>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, _>>>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1499:15
     |
1499 |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

error[E0271]: type mismatch resolving `<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner> as AppearsInFromClause<lemmy_db_schema::schema::language::table>>::Count == diesel::query_source::Once`
    --> crates/db_views_actor/src/community_view.rs:67:10
     |
67   |         .load::<Language>(conn)?;
     |          ^^^^ expected struct `diesel::query_source::Once`, found struct `diesel::query_source::Never`
     |
     = note: required because of the requirements on the impl of `AppearsOnTable<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>>` for `lemmy_db_schema::schema::language::id`
     = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>>` for `lemmy_db_schema::schema::language::id`
     = note: 2 redundant requirements hidden
     = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
     = note: required because of the requirements on the impl of `query_builder::select_clause::SelectClauseExpression<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>>` for `query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, _>>>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, Language>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_language::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_language::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, _>>>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1499:15
     |
1499 |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

error[E0277]: the trait bound `((Integer, Text, Text, Nullable<Text>, diesel::sql_types::Bool, Timestamp, Nullable<Timestamp>, diesel::sql_types::Bool, diesel::sql_types::Bool, Text, diesel::sql_types::Bool, Nullable<Text>, Nullable<Text>, diesel::sql_types::Bool, diesel::sql_types::Bool), (Integer, Integer, BigInt, BigInt, BigInt, Timestamp, BigInt, BigInt, BigInt, BigInt), Nullable<(Integer, Integer, Integer, Timestamp, Nullable<diesel::sql_types::Bool>)>, Nullable<(Integer, Integer, Integer, Timestamp)>): load_dsl::private::CompatibleType<(CommunitySafe, CommunityAggregates, std::option::Option<CommunityFollower>, std::option::Option<CommunityBlock>, Vec<Language>), Pg>` is not satisfied
    --> crates/db_views_actor/src/community_view.rs:217:8
     |
217  |       .load::<CommunityViewTuple>(self.conn)?;
     |        ^^^^ the trait `load_dsl::private::CompatibleType<(CommunitySafe, CommunityAggregates, std::option::Option<CommunityFollower>, std::option::Option<CommunityBlock>, Vec<Language>), Pg>` is not implemented for `((Integer, Text, Text, Nullable<Text>, diesel::sql_types::Bool, Timestamp, Nullable<Timestamp>, diesel::sql_types::Bool, diesel::sql_types::Bool, Text, diesel::sql_types::Bool, Nullable<Text>, Nullable<Text>, diesel::sql_types::Bool, diesel::sql_types::Bool), (Integer, Integer, BigInt, BigInt, BigInt, Timestamp, BigInt, BigInt, BigInt, BigInt), Nullable<(Integer, Integer, Integer, Timestamp, Nullable<diesel::sql_types::Bool>)>, Nullable<(Integer, Integer, Integer, Timestamp)>)`
     |
     = help: the following other types implement trait `load_dsl::private::CompatibleType<U, DB>`:
               (ST0, ST1)
               (ST0, ST1, ST2)
               (ST0, ST1, ST2, ST3)
               (ST0, ST1, ST2, ST3, ST4)
               (ST0, ST1, ST2, ST3, ST4, ST5)
               (ST0, ST1, ST2, ST3, ST4, ST5, ST6)
               (ST0, ST1, ST2, ST3, ST4, ST5, ST6, ST7)
               (ST0, ST1, ST2, ST3, ST4, ST5, ST6, ST7, ST8)
             and 24 others
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, (CommunitySafe, CommunityAggregates, std::option::Option<CommunityFollower>, std::option::Option<CommunityBlock>, Vec<Language>)>` for `BoxedSelectStatement<'_, ((Integer, Text, Text, Nullable<Text>, diesel::sql_types::Bool, Timestamp, Nullable<Timestamp>, diesel::sql_types::Bool, diesel::sql_types::Bool, Text, diesel::sql_types::Bool, Nullable<Text>, Nullable<Text>, diesel::sql_types::Bool, diesel::sql_types::Bool), (Integer, Integer, BigInt, BigInt, BigInt, Timestamp, BigInt, BigInt, BigInt, BigInt), Nullable<(Integer, Integer, Integer, Timestamp, Nullable<diesel::sql_types::Bool>)>, Nullable<(Integer, Integer, Integer, Timestamp)>), FromClause<JoinOn<diesel::internal::table_macro::Join<JoinOn<diesel::internal::table_macro::Join<JoinOn<diesel::internal::table_macro::Join<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_aggregates::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_aggregates::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>, lemmy_db_schema::schema::local_user::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::local_user::person_id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>, lemmy_db_schema::schema::community_follower::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::And<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, lemmy_db_schema::schema::community_follower::community_id>>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community_follower::person_id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>>, lemmy_db_schema::schema::community_block::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::And<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, lemmy_db_schema::schema::community_block::community_id>>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community_block::person_id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>>>, Pg>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1499:15
     |
1499 |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

error[E0277]: the trait bound `(CommunitySafe, CommunityAggregates, std::option::Option<CommunityFollower>, std::option::Option<CommunityBlock>, Vec<Language>): FromSqlRow<_, Pg>` is not satisfied
    --> crates/db_views_actor/src/community_view.rs:217:8
     |
217  |       .load::<CommunityViewTuple>(self.conn)?;
     |        ^^^^ the trait `FromSqlRow<_, Pg>` is not implemented for `(CommunitySafe, CommunityAggregates, std::option::Option<CommunityFollower>, std::option::Option<CommunityBlock>, Vec<Language>)`
     |
     = help: the following other types implement trait `FromSqlRow<ST, DB>`:
               <(T1, T0) as FromSqlRow<(ST1, Untyped), __DB>>
               <(T1, T2, T0) as FromSqlRow<(ST1, ST2, Untyped), __DB>>
               <(T1, T2, T3, T0) as FromSqlRow<(ST1, ST2, ST3, Untyped), __DB>>
               <(T1, T2, T3, T4, T0) as FromSqlRow<(ST1, ST2, ST3, ST4, Untyped), __DB>>
               <(T1, T2, T3, T4, T5, T0) as FromSqlRow<(ST1, ST2, ST3, ST4, ST5, Untyped), __DB>>
               <(T1, T2, T3, T4, T5, T6, T0) as FromSqlRow<(ST1, ST2, ST3, ST4, ST5, ST6, Untyped), __DB>>
               <(T1, T2, T3, T4, T5, T6, T7, T0) as FromSqlRow<(ST1, ST2, ST3, ST4, ST5, ST6, ST7, Untyped), __DB>>
               <(T1, T2, T3, T4, T5, T6, T7, T8, T0) as FromSqlRow<(ST1, ST2, ST3, ST4, ST5, ST6, ST7, ST8, Untyped), __DB>>
             and 23 others
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, (CommunitySafe, CommunityAggregates, std::option::Option<CommunityFollower>, std::option::Option<CommunityBlock>, Vec<Language>)>` for `BoxedSelectStatement<'_, ((Integer, Text, Text, Nullable<Text>, diesel::sql_types::Bool, Timestamp, Nullable<Timestamp>, diesel::sql_types::Bool, diesel::sql_types::Bool, Text, diesel::sql_types::Bool, Nullable<Text>, Nullable<Text>, diesel::sql_types::Bool, diesel::sql_types::Bool), (Integer, Integer, BigInt, BigInt, BigInt, Timestamp, BigInt, BigInt, BigInt, BigInt), Nullable<(Integer, Integer, Integer, Timestamp, Nullable<diesel::sql_types::Bool>)>, Nullable<(Integer, Integer, Integer, Timestamp)>), FromClause<JoinOn<diesel::internal::table_macro::Join<JoinOn<diesel::internal::table_macro::Join<JoinOn<diesel::internal::table_macro::Join<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::community::table, lemmy_db_schema::schema::community_aggregates::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::community_aggregates::community_id>, NullableExpression<lemmy_db_schema::schema::community::id>>>>, lemmy_db_schema::schema::local_user::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::local_user::person_id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>, lemmy_db_schema::schema::community_follower::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::And<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, lemmy_db_schema::schema::community_follower::community_id>>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community_follower::person_id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>>, lemmy_db_schema::schema::community_block::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::And<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community::id, lemmy_db_schema::schema::community_block::community_id>>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::community_block::person_id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>>>, Pg>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1499:15
     |
1499 |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

Some errors have detailed explanations: E0271, E0277, E0308.
For more information about an error, try `rustc --explain E0271`.
error: could not compile `lemmy_db_views_actor` due to 15 previous errors
warning: build failed, waiting for other jobs to finish...
error[E0277]: the trait bound `lemmy_db_schema::schema::language::id: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
  --> crates/db_views/src/site_view.rs:21:10
   |
21 |         .select(language::all_columns)
   |          ^^^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `lemmy_db_schema::schema::language::id`
   |
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <lemmy_db_schema::schema::language::id as SelectableExpression<JoinOn<Join, On>>>
             <lemmy_db_schema::schema::language::id as SelectableExpression<SelectStatement<FromClause<From>>>>
             <lemmy_db_schema::schema::language::id as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
             <lemmy_db_schema::schema::language::id as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
             <lemmy_db_schema::schema::language::id as SelectableExpression<diesel::query_builder::Only<lemmy_db_schema::schema::language::table>>>
             <lemmy_db_schema::schema::language::id as SelectableExpression<lemmy_db_schema::schema::language::table>>
   = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `lemmy_db_schema::schema::language::id`
   = note: 2 redundant requirements hidden
   = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>`

error[E0271]: type mismatch resolving `<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>> as AppearsInFromClause<lemmy_db_schema::schema::language::table>>::Count == diesel::query_source::Once`
  --> crates/db_views/src/site_view.rs:21:10
   |
21 |         .select(language::all_columns)
   |          ^^^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
   |
   = note: required because of the requirements on the impl of `AppearsOnTable<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `lemmy_db_schema::schema::language::id`
   = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `lemmy_db_schema::schema::language::id`
   = note: 1 redundant requirement hidden
   = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>`

error[E0277]: the trait bound `code: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
  --> crates/db_views/src/site_view.rs:21:10
   |
21 |         .select(language::all_columns)
   |          ^^^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `code`
   |
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <code as SelectableExpression<JoinOn<Join, On>>>
             <code as SelectableExpression<SelectStatement<FromClause<From>>>>
             <code as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
             <code as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
             <code as SelectableExpression<diesel::query_builder::Only<lemmy_db_schema::schema::language::table>>>
             <code as SelectableExpression<lemmy_db_schema::schema::language::table>>
   = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `code`
   = note: 2 redundant requirements hidden
   = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>`

error[E0277]: the trait bound `lemmy_db_schema::schema::language::name: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
  --> crates/db_views/src/site_view.rs:21:10
   |
21 |         .select(language::all_columns)
   |          ^^^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `lemmy_db_schema::schema::language::name`
   |
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <lemmy_db_schema::schema::language::name as SelectableExpression<JoinOn<Join, On>>>
             <lemmy_db_schema::schema::language::name as SelectableExpression<SelectStatement<FromClause<From>>>>
             <lemmy_db_schema::schema::language::name as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
             <lemmy_db_schema::schema::language::name as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
             <lemmy_db_schema::schema::language::name as SelectableExpression<diesel::query_builder::Only<lemmy_db_schema::schema::language::table>>>
             <lemmy_db_schema::schema::language::name as SelectableExpression<lemmy_db_schema::schema::language::table>>
   = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `lemmy_db_schema::schema::language::name`
   = note: 2 redundant requirements hidden
   = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>`

error[E0271]: type mismatch resolving `<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner> as AppearsInFromClause<lemmy_db_schema::schema::language::table>>::Count == diesel::query_source::Once`
  --> crates/db_views/src/site_view.rs:21:10
   |
21 |         .select(language::all_columns)
   |          ^^^^^^ expected struct `diesel::query_source::Never`, found struct `diesel::query_source::Once`
   |
   = note: required because of the requirements on the impl of `AppearsOnTable<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `lemmy_db_schema::schema::language::id`
   = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `lemmy_db_schema::schema::language::id`
   = note: 2 redundant requirements hidden
   = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>`

error[E0277]: the trait bound `lemmy_db_schema::schema::language::id: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
    --> crates/db_views/src/site_view.rs:23:10
     |
23   |         .load::<Language>(conn)?;
     |          ^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `lemmy_db_schema::schema::language::id`
     |
     = help: the following other types implement trait `SelectableExpression<QS>`:
               <lemmy_db_schema::schema::language::id as SelectableExpression<JoinOn<Join, On>>>
               <lemmy_db_schema::schema::language::id as SelectableExpression<SelectStatement<FromClause<From>>>>
               <lemmy_db_schema::schema::language::id as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
               <lemmy_db_schema::schema::language::id as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
               <lemmy_db_schema::schema::language::id as SelectableExpression<diesel::query_builder::Only<lemmy_db_schema::schema::language::table>>>
               <lemmy_db_schema::schema::language::id as SelectableExpression<lemmy_db_schema::schema::language::table>>
     = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `lemmy_db_schema::schema::language::id`
     = note: 2 redundant requirements hidden
     = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
     = note: required because of the requirements on the impl of `query_builder::select_clause::SelectClauseExpression<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>` for `query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, Language>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1499:15
     |
1499 |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

error[E0271]: type mismatch resolving `<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>> as AppearsInFromClause<lemmy_db_schema::schema::language::table>>::Count == diesel::query_source::Once`
    --> crates/db_views/src/site_view.rs:23:10
     |
23   |         .load::<Language>(conn)?;
     |          ^^^^ expected struct `diesel::query_source::Once`, found struct `diesel::query_source::Never`
     |
     = note: required because of the requirements on the impl of `AppearsOnTable<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `lemmy_db_schema::schema::language::id`
     = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `lemmy_db_schema::schema::language::id`
     = note: 1 redundant requirement hidden
     = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
     = note: required because of the requirements on the impl of `query_builder::select_clause::SelectClauseExpression<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>` for `query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, Language>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1499:15
     |
1499 |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

error[E0277]: the trait bound `code: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
    --> crates/db_views/src/site_view.rs:23:10
     |
23   |         .load::<Language>(conn)?;
     |          ^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `code`
     |
     = help: the following other types implement trait `SelectableExpression<QS>`:
               <code as SelectableExpression<JoinOn<Join, On>>>
               <code as SelectableExpression<SelectStatement<FromClause<From>>>>
               <code as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
               <code as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
               <code as SelectableExpression<diesel::query_builder::Only<lemmy_db_schema::schema::language::table>>>
               <code as SelectableExpression<lemmy_db_schema::schema::language::table>>
     = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `code`
     = note: 2 redundant requirements hidden
     = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
     = note: required because of the requirements on the impl of `query_builder::select_clause::SelectClauseExpression<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>` for `query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, Language>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1499:15
     |
1499 |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

error[E0277]: the trait bound `lemmy_db_schema::schema::language::name: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
    --> crates/db_views/src/site_view.rs:23:10
     |
23   |         .load::<Language>(conn)?;
     |          ^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `lemmy_db_schema::schema::language::name`
     |
     = help: the following other types implement trait `SelectableExpression<QS>`:
               <lemmy_db_schema::schema::language::name as SelectableExpression<JoinOn<Join, On>>>
               <lemmy_db_schema::schema::language::name as SelectableExpression<SelectStatement<FromClause<From>>>>
               <lemmy_db_schema::schema::language::name as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
               <lemmy_db_schema::schema::language::name as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
               <lemmy_db_schema::schema::language::name as SelectableExpression<diesel::query_builder::Only<lemmy_db_schema::schema::language::table>>>
               <lemmy_db_schema::schema::language::name as SelectableExpression<lemmy_db_schema::schema::language::table>>
     = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `lemmy_db_schema::schema::language::name`
     = note: 2 redundant requirements hidden
     = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
     = note: required because of the requirements on the impl of `query_builder::select_clause::SelectClauseExpression<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>` for `query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, Language>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1499:15
     |
1499 |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

error[E0271]: type mismatch resolving `<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner> as AppearsInFromClause<lemmy_db_schema::schema::language::table>>::Count == diesel::query_source::Once`
    --> crates/db_views/src/site_view.rs:23:10
     |
23   |         .load::<Language>(conn)?;
     |          ^^^^ expected struct `diesel::query_source::Once`, found struct `diesel::query_source::Never`
     |
     = note: required because of the requirements on the impl of `AppearsOnTable<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `lemmy_db_schema::schema::language::id`
     = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `lemmy_db_schema::schema::language::id`
     = note: 2 redundant requirements hidden
     = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
     = note: required because of the requirements on the impl of `query_builder::select_clause::SelectClauseExpression<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>` for `query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, Language>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1499:15
     |
1499 |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

Some errors have detailed explanations: E0271, E0277.
error: could not compile `lemmy_db_views` due to 10 previous errors
error[E0499]: cannot borrow `*conn` as mutable more than once at a time
   --> crates/db_schema/src/impls/actor_language.rs:295:49
    |
295 |     LocalUserLanguage::update(conn, test_langs2(conn), local_user.id).unwrap();
    |     ------------------------- ----              ^^^^ second mutable borrow occurs here
    |     |                         |
    |     |                         first mutable borrow occurs here
    |     first borrow later used by call
    |
help: try adding a local storing this argument...
   --> crates/db_schema/src/impls/actor_language.rs:295:37
    |
295 |     LocalUserLanguage::update(conn, test_langs2(conn), local_user.id).unwrap();
    |                                     ^^^^^^^^^^^^^^^^^
help: ...and then using that local as the argument to this call
   --> crates/db_schema/src/impls/actor_language.rs:295:5
    |
295 |     LocalUserLanguage::update(conn, test_langs2(conn), local_user.id).unwrap();
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

For more information about this error, try `rustc --explain E0499`.
error: could not compile `lemmy_db_schema` due to previous error
error[E0277]: the trait bound `lemmy_db_schema::schema::language::id: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
  --> crates/db_views/src/site_view.rs:21:10
   |
21 |         .select(language::all_columns)
   |          ^^^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `lemmy_db_schema::schema::language::id`
   |
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <lemmy_db_schema::schema::language::id as SelectableExpression<JoinOn<Join, On>>>
             <lemmy_db_schema::schema::language::id as SelectableExpression<Only<lemmy_db_schema::schema::language::table>>>
             <lemmy_db_schema::schema::language::id as SelectableExpression<SelectStatement<FromClause<From>>>>
             <lemmy_db_schema::schema::language::id as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
             <lemmy_db_schema::schema::language::id as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
             <lemmy_db_schema::schema::language::id as SelectableExpression<lemmy_db_schema::schema::language::table>>
   = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `lemmy_db_schema::schema::language::id`
   = note: 2 redundant requirements hidden
   = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>`

error[E0277]: the trait bound `code: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
  --> crates/db_views/src/site_view.rs:21:10
   |
21 |         .select(language::all_columns)
   |          ^^^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `code`
   |
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <code as SelectableExpression<JoinOn<Join, On>>>
             <code as SelectableExpression<Only<lemmy_db_schema::schema::language::table>>>
             <code as SelectableExpression<SelectStatement<FromClause<From>>>>
             <code as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
             <code as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
             <code as SelectableExpression<lemmy_db_schema::schema::language::table>>
   = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `code`
   = note: 2 redundant requirements hidden
   = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>`

error[E0277]: the trait bound `lemmy_db_schema::schema::language::name: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
  --> crates/db_views/src/site_view.rs:21:10
   |
21 |         .select(language::all_columns)
   |          ^^^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `lemmy_db_schema::schema::language::name`
   |
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <lemmy_db_schema::schema::language::name as SelectableExpression<JoinOn<Join, On>>>
             <lemmy_db_schema::schema::language::name as SelectableExpression<Only<lemmy_db_schema::schema::language::table>>>
             <lemmy_db_schema::schema::language::name as SelectableExpression<SelectStatement<FromClause<From>>>>
             <lemmy_db_schema::schema::language::name as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
             <lemmy_db_schema::schema::language::name as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
             <lemmy_db_schema::schema::language::name as SelectableExpression<lemmy_db_schema::schema::language::table>>
   = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `lemmy_db_schema::schema::language::name`
   = note: 2 redundant requirements hidden
   = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
   = note: required because of the requirements on the impl of `SelectDsl<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>`

error[E0277]: the trait bound `lemmy_db_schema::schema::language::id: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
    --> crates/db_views/src/site_view.rs:23:10
     |
23   |         .load::<Language>(conn)?;
     |          ^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `lemmy_db_schema::schema::language::id`
     |
     = help: the following other types implement trait `SelectableExpression<QS>`:
               <lemmy_db_schema::schema::language::id as SelectableExpression<JoinOn<Join, On>>>
               <lemmy_db_schema::schema::language::id as SelectableExpression<Only<lemmy_db_schema::schema::language::table>>>
               <lemmy_db_schema::schema::language::id as SelectableExpression<SelectStatement<FromClause<From>>>>
               <lemmy_db_schema::schema::language::id as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
               <lemmy_db_schema::schema::language::id as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
               <lemmy_db_schema::schema::language::id as SelectableExpression<lemmy_db_schema::schema::language::table>>
     = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `lemmy_db_schema::schema::language::id`
     = note: 2 redundant requirements hidden
     = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
     = note: required because of the requirements on the impl of `query_builder::select_clause::SelectClauseExpression<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>` for `query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, Language>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1499:15
     |
1499 |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

error[E0277]: the trait bound `code: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
    --> crates/db_views/src/site_view.rs:23:10
     |
23   |         .load::<Language>(conn)?;
     |          ^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `code`
     |
     = help: the following other types implement trait `SelectableExpression<QS>`:
               <code as SelectableExpression<JoinOn<Join, On>>>
               <code as SelectableExpression<Only<lemmy_db_schema::schema::language::table>>>
               <code as SelectableExpression<SelectStatement<FromClause<From>>>>
               <code as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
               <code as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
               <code as SelectableExpression<lemmy_db_schema::schema::language::table>>
     = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `code`
     = note: 2 redundant requirements hidden
     = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
     = note: required because of the requirements on the impl of `query_builder::select_clause::SelectClauseExpression<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>` for `query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, Language>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1499:15
     |
1499 |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

error[E0277]: the trait bound `lemmy_db_schema::schema::language::name: SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not satisfied
    --> crates/db_views/src/site_view.rs:23:10
     |
23   |         .load::<Language>(conn)?;
     |          ^^^^ the trait `SelectableExpression<query_source::impls_which_are_only_here_to_improve_error_messages::this_table_doesnt_appear_in_the_from_clause_of_your_query>` is not implemented for `lemmy_db_schema::schema::language::name`
     |
     = help: the following other types implement trait `SelectableExpression<QS>`:
               <lemmy_db_schema::schema::language::name as SelectableExpression<JoinOn<Join, On>>>
               <lemmy_db_schema::schema::language::name as SelectableExpression<Only<lemmy_db_schema::schema::language::table>>>
               <lemmy_db_schema::schema::language::name as SelectableExpression<SelectStatement<FromClause<From>>>>
               <lemmy_db_schema::schema::language::name as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, Inner>>>
               <lemmy_db_schema::schema::language::name as SelectableExpression<diesel::internal::table_macro::Join<Left, Right, LeftOuter>>>
               <lemmy_db_schema::schema::language::name as SelectableExpression<lemmy_db_schema::schema::language::table>>
     = note: required because of the requirements on the impl of `SelectableExpression<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>>` for `lemmy_db_schema::schema::language::name`
     = note: 2 redundant requirements hidden
     = note: required because of the requirements on the impl of `SelectableExpression<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>` for `(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)`
     = note: required because of the requirements on the impl of `query_builder::select_clause::SelectClauseExpression<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>>` for `query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>`
     = note: required because of the requirements on the impl of `Query` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
     = note: required because of the requirements on the impl of `LoadQuery<'_, _, Language>` for `SelectStatement<FromClause<JoinOn<diesel::internal::table_macro::Join<lemmy_db_schema::schema::site_language::table, lemmy_db_schema::schema::site::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<lemmy_db_schema::schema::site_language::site_id>, NullableExpression<lemmy_db_schema::schema::site::id>>>>>, query_builder::select_clause::SelectClause<(lemmy_db_schema::schema::language::id, code, lemmy_db_schema::schema::language::name)>, query_builder::distinct_clause::NoDistinctClause, query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<lemmy_db_schema::schema::site::id, diesel::internal::derives::as_expression::Bound<Integer, i32>>>>>`
note: required by a bound in `diesel::RunQueryDsl::load`
    --> /home/felix/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel-2.0.0/src/query_dsl/mod.rs:1499:15
     |
1499 |         Self: LoadQuery<'query, Conn, U>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `diesel::RunQueryDsl::load`

error: could not compile `lemmy_db_views` due to 10 previous errors
